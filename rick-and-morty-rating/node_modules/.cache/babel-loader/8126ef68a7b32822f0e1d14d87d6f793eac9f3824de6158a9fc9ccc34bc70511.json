{"ast":null,"code":"import React,{useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";const LikeButton=_ref=>{let{characterId,initialLikes}=_ref;const[likes,setLikes]=useState(initialLikes);const handleLike=async()=>{// Increment the like count\nconst newLikes=likes+1;setLikes(newLikes);// Here you would typically send the new like count to your Supabase database\n// Example:\n// await supabase\n//   .from('characters')\n//   .update({ likes: newLikes })\n//   .eq('id', characterId);\n};return/*#__PURE__*/_jsxs(\"button\",{onClick:handleLike,children:[\"Like \",likes]});};export default LikeButton;","map":{"version":3,"names":["React","useState","jsxs","_jsxs","LikeButton","_ref","characterId","initialLikes","likes","setLikes","handleLike","newLikes","onClick","children"],"sources":["/workspaces/R-MPAGE/rick-and-morty-rating/src/components/LikeButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface LikeButtonProps {\n  characterId: number;\n  initialLikes: number;\n}\n\nconst LikeButton: React.FC<LikeButtonProps> = ({ characterId, initialLikes }) => {\n  const [likes, setLikes] = useState(initialLikes);\n\n  const handleLike = async () => {\n    // Increment the like count\n    const newLikes = likes + 1;\n    setLikes(newLikes);\n\n    // Here you would typically send the new like count to your Supabase database\n    // Example:\n    // await supabase\n    //   .from('characters')\n    //   .update({ likes: newLikes })\n    //   .eq('id', characterId);\n  };\n\n  return (\n    <button onClick={handleLike}>\n      Like {likes}\n    </button>\n  );\n};\n\nexport default LikeButton;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,yBAOxC,KAAM,CAAAC,UAAqC,CAAGC,IAAA,EAAmC,IAAlC,CAAEC,WAAW,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAC1E,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAACM,YAAY,CAAC,CAEhD,KAAM,CAAAG,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B;AACA,KAAM,CAAAC,QAAQ,CAAGH,KAAK,CAAG,CAAC,CAC1BC,QAAQ,CAACE,QAAQ,CAAC,CAElB;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CAED,mBACER,KAAA,WAAQS,OAAO,CAAEF,UAAW,CAAAG,QAAA,EAAC,OACtB,CAACL,KAAK,EACL,CAAC,CAEb,CAAC,CAED,cAAe,CAAAJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}