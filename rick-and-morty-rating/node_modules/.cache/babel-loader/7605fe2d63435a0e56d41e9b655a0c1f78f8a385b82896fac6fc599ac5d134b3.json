{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { NETWORK_FAILURE } from './constants';\nconst _getErrorMessage = err => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n  if (!(error === null || error === void 0 ? void 0 : error.status)) {\n    return reject({\n      message: NETWORK_FAILURE.ERROR_MESSAGE\n    });\n  }\n  if (typeof error.json !== 'function') {\n    return reject(error);\n  }\n  error.json().then(err => {\n    return reject({\n      message: _getErrorMessage(err),\n      status: (error === null || error === void 0 ? void 0 : error.status) || 500\n    });\n  });\n};\nconst _getRequestParams = (method, options, body) => {\n  const params = {\n    method,\n    headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n  };\n  if (method === 'GET') {\n    return params;\n  }\n  params.headers = Object.assign({\n    'Content-Type': 'application/json;charset=UTF-8'\n  }, options === null || options === void 0 ? void 0 : options.headers);\n  params.body = JSON.stringify(body);\n  return params;\n};\nfunction _handleRequest(fetcher, method, url, options, body) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      fetcher(url, _getRequestParams(method, options, body)).then(result => {\n        if (!result.ok) throw result;\n        if (options === null || options === void 0 ? void 0 : options.noResolveJson) return resolve;\n        return result.json();\n      }).then(data => resolve(data)).catch(error => handleError(error, reject));\n    });\n  });\n}\nexport function get(fetcher, url, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return _handleRequest(fetcher, 'GET', url, options);\n  });\n}\nexport function post(fetcher, url, body, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return _handleRequest(fetcher, 'POST', url, options, body);\n  });\n}\nexport function put(fetcher, url, body, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return _handleRequest(fetcher, 'PUT', url, options, body);\n  });\n}\nexport function remove(fetcher, url, body, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return _handleRequest(fetcher, 'DELETE', url, options, body);\n  });\n}","map":{"version":3,"names":["NETWORK_FAILURE","_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","handleError","reject","status","ERROR_MESSAGE","json","then","_getRequestParams","method","options","body","params","headers","Object","assign","_handleRequest","fetcher","url","Promise","resolve","result","ok","noResolveJson","data","catch","get","post","put","remove"],"sources":["/workspaces/R-MPAGE/rick-and-morty-rating/node_modules/@supabase/gotrue-js/src/lib/fetch.ts"],"sourcesContent":["import { NETWORK_FAILURE } from './constants'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = (error: any, reject: any) => {\n  if (!error?.status) {\n    return reject({ message: NETWORK_FAILURE.ERROR_MESSAGE })\n  }\n  if (typeof error.json !== 'function') {\n    return reject(error)\n  }\n  error.json().then((err: any) => {\n    return reject({\n      message: _getErrorMessage(err),\n      status: error?.status || 500,\n    })\n  })\n}\n\nconst _getRequestParams = (method: RequestMethodType, options?: FetchOptions, body?: object) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n\n  return params\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return resolve\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(fetcher: Fetch, url: string, options?: FetchOptions): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, body)\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, body)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}