{"ast":null,"code":"import { StorageBucketApi, StorageFileApi } from './lib';\nexport class StorageClient extends StorageBucketApi {\n  constructor(url) {\n    let headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let fetch = arguments.length > 2 ? arguments[2] : undefined;\n    super(url, headers, fetch);\n  }\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id) {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch);\n  }\n}","map":{"version":3,"names":["StorageBucketApi","StorageFileApi","StorageClient","constructor","url","headers","arguments","length","undefined","fetch","from","id"],"sources":["/workspaces/R-MPAGE/rick-and-morty-rating/node_modules/@supabase/storage-js/src/StorageClient.ts"],"sourcesContent":["import { StorageBucketApi, StorageFileApi } from './lib'\nimport { Fetch } from './lib/fetch'\n\nexport class StorageClient extends StorageBucketApi {\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    super(url, headers, fetch)\n  }\n\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id: string): StorageFileApi {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\n  }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,cAAc,QAAQ,OAAO;AAGxD,OAAM,MAAOC,aAAc,SAAQF,gBAAgB;EACjDG,YAAYC,GAAW,EAAwD;IAAA,IAAtDC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqC,EAAE;IAAA,IAAEG,KAAa,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAC7E,KAAK,CAACJ,GAAG,EAAEC,OAAO,EAAEI,KAAK,CAAC;EAC5B;EAEA;;;;;EAKAC,IAAIA,CAACC,EAAU;IACb,OAAO,IAAIV,cAAc,CAAC,IAAI,CAACG,GAAG,EAAE,IAAI,CAACC,OAAO,EAAEM,EAAE,EAAE,IAAI,CAACF,KAAK,CAAC;EACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}